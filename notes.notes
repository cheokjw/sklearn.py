============================================================
| Features and labels                                      |
============================================================

Features = acts as input (Labelled as X below)
            - One feature does not affect another feature
Labels = acts as output (Labelled as y below)

_____________________________________________________________________
| Feature1  | Feature2 | Feature3 | Feature 4 | Feature 5 | Label   |         
|___________|__________|__________|___________|___________|_________|         
| X1        | X2       | X3       | X4        | X5        | y1      |         ^
|___________|__________|__________|___________|___________|_________|         |
| X6        | X7       | X8       | X9        | X10       | y2      |         |
|___________|__________|__________|___________|___________|_________|     Instances
| X11       | X12      | X13      | X14       | X15       | y3      |         |
|___________|__________|__________|___________|___________|_________|         |
| X16       | X17      | X18      | X19       | X20       | y4      |         |
|___________|__________|__________|___________|___________|_________|         |

<-------------------------   Dimension     -------------------------->

Dimension = 5
Instances = 4
- The number of features are also known as dimensions
- Features are also known as attributes, independent variable, input
- Labels are known as dependent variable, output



============================================================
| Saving a model                                           |
============================================================
 
from sklearn.externals import joblib

# saving
filename = 'model.sav'
joblib.dump(clf, filename)

# open
clf.joblib.load(filename)


============================================================
| Classification                                           |
============================================================
Classfication is a process of categorizing a gicen set of data into classes (Grouping data)
E.g:
    Model had classified three regions (red, blue and green)
    Lets say one of the data point is plotted on the red region. Therefore, the model will classify the data point as region red.

1. KNN (K-nearest neighbours)
Can be used for classification and also regression algorithm
k acts as a constant
For example, when a point is plotted on a graph, the model calculates the disatnce of k-amount of points nearest to the point.
Then, the majority will decide which region the point belongs to

Case scenario:
Lets say k constant = 15
A point is plotted on the graph. Then, the model calculates distance between the 15 nearest point to the point
Then, the closest majority to the point is region blue. Thus, the point is classified as blue



2. SVM (Support Vector Machine)
Can be used for classification and also regression algorithm
Effective for high dimensional spaces (Contains many features)
Many kernel functions

SVM creates a hyperplane (Hyperplane would be a single line in a 2dimension graph and 2dimensional line in a 3dimension graph etc.)
- SVM draws the plane by computing the distance from the support vectors
- The way SVM optimize the model is by creating the largest possible margin (THe higher the margin, the higher the accuracy)
Plane can be linear or sigmoid function (Thus, increasing fault tolerance)

|
|    . .  .   . /    ...
|        .. \  /    ..                                 . = data points/ support vectors
|   ... .    \/   .  .                                 / = hyperplane
|  ..  .     /\    .                                   \ = margin
| .         /  \ .. . 
|   .. .   /   . 
|         /    .. ...
|________________________________

Kernel functions
SVM couldn't seperate the datapoints with plane since they are all clustered together. Therefore, it uses kernel function to seperate it

|                                                 |
|   **********                                    |
|  *   ... .   *              converts            |
| *       .  .  *           ------------>         |     . .. .. . .. 
|  *.... .. .  *                                  |   ***************
|    **********                                   |
|____________________                             |_____________________


=============================================================
| Linear Regression vs Logistic Regression                  |
=============================================================
1. Linear Regression

2. Logistic Regression
